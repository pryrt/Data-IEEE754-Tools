########################################################################
# Verifies the proper handling of +/-Zero, +/-Denormal, +/-Infinity,
#   +/-Signaling NaN, +/-Quiet NaN, and +/-Normal
########################################################################
# Subversion Info
#   $Author: pryrtmx $
#   $Date: 2016-06-28 12:59:14 -0700 (Tue, 28 Jun 2016) $
#   $Revision: 196 $
#   $URL: https://subversion.assembla.com/svn/pryrt/trunk/perl/Data-IEEE754-Tools/t/03-edgecases.t $
#   $Header: https://subversion.assembla.com/svn/pryrt/trunk/perl/Data-IEEE754-Tools/t/03-edgecases.t 196 2016-06-28 19:59:14Z pryrtmx $
#   $Id: 03-edgecases.t 196 2016-06-28 19:59:14Z pryrtmx $
########################################################################
use 5.008005;
use warnings;
use strict;
use Test::More;
use Data::IEEE754::Tools qw/expand_ieee754/;

my @tests = ();

# qw/0000000000000000 8000000000000000/;  qw/POS_ZERO___000 NEG_ZERO___000/;
push @tests, {
    text    => 'POS_ZERO',
    nibs    => '0000000000000000',
    bp      => "+0",
    bf      => "+0",
    xp      => "+0",
    xf      => "+0",
    dp      => "+0",
    df      => "+0",
};

push @tests, {
    text    => 'NEG_ZERO',
    nibs    => '8000000000000000',
    bp      => "-0",
    bf      => "-0",
    xp      => "-0",
    xf      => "-0",
    dp      => "-0",
    df      => "-0",
};

# qw/0000000000000001 8000000000000001/;  qw/POS_DENORM_001 NEG_DENORM_001/;
push @tests, {
    text    => 'POS_DENORM_1',
    nibs    => '0000000000000001',
    bp      => "+0b0.0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0001 * (2**-1022)",
    bf      => "  [     0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_1 ]\n+ [ 0 + -------------------------------------------------------------------- ] * (2**-1022) = 4.94065645841247e-324\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "+0x0.0000_0000_0000_1 * (2**-1022)",
    xf      => "  [     0x0000_0000_0000_01 ]\n+ [ 0 + ------------------- ] * (2**-1022) = 4.94065645841247e-324\n  [     0x1000_0000_0000_00 ]",
    dp      => "+0.000_000_000_000_000_222_044_605 * (2**-1022)",
    df      => "  [                         1 ]\n+ [ 0 + --------------------- ] * (2**-1022) = 4.94065645841247e-324\n  [     4,503,599,627,370,496 ]",
};

push @tests, {
    text    => 'NEG_DENORM_1',
    nibs    => '8000000000000001',
    bp      => "-0b0.0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0001 * (2**-1022)",
    bf      => "  [     0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_1 ]\n- [ 0 + -------------------------------------------------------------------- ] * (2**-1022) = -4.94065645841247e-324\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "-0x0.0000_0000_0000_1 * (2**-1022)",
    xf      => "  [     0x0000_0000_0000_01 ]\n- [ 0 + ------------------- ] * (2**-1022) = -4.94065645841247e-324\n  [     0x1000_0000_0000_00 ]",
    dp      => "-0.000_000_000_000_000_222_044_605 * (2**-1022)",
    df      => "  [                         1 ]\n- [ 0 + --------------------- ] * (2**-1022) = -4.94065645841247e-324\n  [     4,503,599,627,370,496 ]",
};

# qw/000FFFFFFFFFFFFF 800FFFFFFFFFFFFF/;  qw/POS_DENORM_FFF NEG_DENORM_FFF/;
push @tests, {
    text    => 'POS_DENORM_F',
    nibs    => '000FFFFFFFFFFFFF',
    bp      => "+0b0.1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111 * (2**-1022)",
    bf      => "  [     0b0111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1 ]\n+ [ 0 + -------------------------------------------------------------------- ] * (2**-1022) = 2.2250738585072e-308\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "+0x0.FFFF_FFFF_FFFF_F * (2**-1022)",
    xf      => "  [     0x0FFF_FFFF_FFFF_FF ]\n+ [ 0 + ------------------- ] * (2**-1022) = 2.2250738585072e-308\n  [     0x1000_0000_0000_00 ]",
    dp      => qr/^\Q+0.999_999_999_999_999_7\E[78][_0-9]{9}\Q * (2**-1022)\E$/,
    df      => "  [     4,503,599,627,370,495 ]\n+ [ 0 + --------------------- ] * (2**-1022) = 2.2250738585072e-308\n  [     4,503,599,627,370,496 ]",
};

push @tests, {
    text    => 'NEG_DENORM_F',
    nibs    => '800FFFFFFFFFFFFF',
    bp      => "-0b0.1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111 * (2**-1022)",
    bf      => "  [     0b0111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1 ]\n- [ 0 + -------------------------------------------------------------------- ] * (2**-1022) = -2.2250738585072e-308\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "-0x0.FFFF_FFFF_FFFF_F * (2**-1022)",
    xf      => "  [     0x0FFF_FFFF_FFFF_FF ]\n- [ 0 + ------------------- ] * (2**-1022) = -2.2250738585072e-308\n  [     0x1000_0000_0000_00 ]",
    dp      => qr/^\Q-0.999_999_999_999_999_7\E[78][_0-9]{9}\Q * (2**-1022)\E$/,
    df      => "  [     4,503,599,627,370,495 ]\n- [ 0 + --------------------- ] * (2**-1022) = -2.2250738585072e-308\n  [     4,503,599,627,370,496 ]",
};

# qw/7FF0000000000000 FFF0000000000000/;  qw/POS_INF____000 NEG_INF____000/;
push @tests, {
    text    => 'POS_INF',
    nibs    => '7FF0000000000000',
    bp      => qr/(?i)(?<!-)inf/,          # (?i) = enable case insensitive for the rest of the re; (?<!-) lookbehind: find inf that is NOT preceded by a - (http://perldoc.perl.org/perlre.html#Extended-Patterns)
    bf      => qr/(?i)(?<!-)inf/,
    xp      => qr/(?i)(?<!-)inf/,
    xf      => qr/(?i)(?<!-)inf/,
    dp      => qr/(?i)(?<!-)inf/,
    df      => qr/(?i)(?<!-)inf/,
};

push @tests, {
    text    => 'NEG_INF',
    nibs    => 'FFF0000000000000',
    bp      => qr/(?i)-inf/,               # (?i) = enable case insensitive for the rest of the re
    bf      => qr/(?i)-inf/,
    xp      => qr/(?i)-inf/,
    xf      => qr/(?i)-inf/,
    dp      => qr/(?i)-inf/,
    df      => qr/(?i)-inf/,
};

# qw/7FF0000000000001 FFF0000000000001/;  qw/POS_SNAN___001 NEG_SNAN___001/;
push @tests, {
    text    => 'POS_SNAN_01',
    nibs    => '7FF0000000000001',
    bp      => qr/(?i)nan(?-i).*\Q(0b\E[01]\Q000000000000000000000000000000000000000000000000001)\E$/,  # allow signaling [0] or quiet [1]
    bf      => qr/(?i)nan(?-i).*\Q(0b\E[01]\Q000000000000000000000000000000000000000000000000001)\E$/,
    xp      => qr/(?i)nan(?-i).*\Q(0x\E[08]\Q000000000001)\E$/,                                         # allow signaling [0] or quiet [8]
    xf      => qr/(?i)nan(?-i).*\Q(0x\E[08]\Q000000000001)\E$/,
    dp      => qr/(?i)nan(?-i).*\Q(0d\E(?:(2251799813685249|1))\Q)\E$/,                                 # ?: don't store () matches; allow 0x1=1 or 0x8000000000001 = 2251799813685249
    df      => qr/(?i)nan(?-i).*\Q(0d\E(?:(2251799813685249|1))\Q)\E$/,
};
push @tests, {
    text    => 'NEG_SNAN_01',
    nibs    => 'FFF0000000000001',
    bp      => qr/(?i)nan(?-i).*\Q(0b\E[01]\Q000000000000000000000000000000000000000000000000001)\E$/,  # allow signaling [0] or quiet [1]
    bf      => qr/(?i)nan(?-i).*\Q(0b\E[01]\Q000000000000000000000000000000000000000000000000001)\E$/,
    xp      => qr/(?i)nan(?-i).*\Q(0x\E[08]\Q000000000001)\E$/,                                         # allow signaling [0] or quiet [8]
    xf      => qr/(?i)nan(?-i).*\Q(0x\E[08]\Q000000000001)\E$/,
    dp      => qr/(?i)nan(?-i).*\Q(0d\E(?:(2251799813685249|1))\Q)\E$/,                                 # ?: don't store () matches; allow 0x1=1 or 0x8000000000001 = 2251799813685249
    df      => qr/(?i)nan(?-i).*\Q(0d\E(?:(2251799813685249|1))\Q)\E$/,
};

# qw/7FF7FFFFFFFFFFFF FFF7FFFFFFFFFFFF/;  qw/POS_SNAN___7FF NEG_SNAN___7FF/;
push @tests, {
    text    => 'POS_SNAN_7F',
    nibs    => '7FF7FFFFFFFFFFFF',
    bp      => qr/(?i)nan(?-i).*\Q(0b\E[01]\Q111111111111111111111111111111111111111111111111111)\E$/,  # allow signaling [0] or quiet [1]
    bf      => qr/(?i)nan(?-i).*\Q(0b\E[01]\Q111111111111111111111111111111111111111111111111111)\E$/,
    xp      => qr/(?i)nan(?-i).*\Q(0x\E[7F]\QFFFFFFFFFFFF)\E$/,                                         # allow signaling [0] or quiet [8]
    xf      => qr/(?i)nan(?-i).*\Q(0x\E[7F]\QFFFFFFFFFFFF)\E$/,
    dp      => qr/(?i)nan(?-i).*\Q(0d\E(?:(2251799813685247|4503599627370495))\Q)\E$/,                  # ?: don't store () matches; allow 7F... or FF....
    df      => qr/(?i)nan(?-i).*\Q(0d\E(?:(2251799813685247|4503599627370495))\Q)\E$/,
};
push @tests, {
    text    => 'NEG_SNAN_7F',
    nibs    => 'FFF7FFFFFFFFFFFF',
    bp      => qr/(?i)nan(?-i).*\Q(0b\E[01]\Q111111111111111111111111111111111111111111111111111)\E$/,  # allow signaling [0] or quiet [1]
    bf      => qr/(?i)nan(?-i).*\Q(0b\E[01]\Q111111111111111111111111111111111111111111111111111)\E$/,
    xp      => qr/(?i)nan(?-i).*\Q(0x\E[7F]\QFFFFFFFFFFFF)\E$/,                                         # allow signaling [0] or quiet [8]
    xf      => qr/(?i)nan(?-i).*\Q(0x\E[7F]\QFFFFFFFFFFFF)\E$/,
    dp      => qr/(?i)nan(?-i).*\Q(0d\E(?:(2251799813685247|4503599627370495))\Q)\E$/,                  # ?: don't store () matches; allow 7F... or FF....
    df      => qr/(?i)nan(?-i).*\Q(0d\E(?:(2251799813685247|4503599627370495))\Q)\E$/,
};

# qw/7FF8000000000000 FFF8000000000000/;  qw/POS_IND____000 NEG_IND____000/;
push @tests, {
    text    => 'POS_IND_80',
    nibs    => '7FF8000000000000',
    bp      => qr/(?i)nan(?-i).*\Q(0b1000000000000000000000000000000000000000000000000000)\E$/,         # require quiet [1]
    bf      => qr/(?i)nan(?-i).*\Q(0b1000000000000000000000000000000000000000000000000000)\E$/,
    xp      => qr/(?i)nan(?-i).*\Q(0x8000000000000)\E$/,                                                # require quiet [8]
    xf      => qr/(?i)nan(?-i).*\Q(0x8000000000000)\E$/,
    dp      => qr/(?i)nan(?-i).*\Q(0d2251799813685248)\E$/,                                             # ?: don't store () matches; require quiet only
    df      => qr/(?i)nan(?-i).*\Q(0d2251799813685248)\E$/,
};
push @tests, {
    text    => 'NEG_IND_80',
    nibs    => 'FFF8000000000000',
    bp      => qr/(?i)nan(?-i).*\Q(0b1000000000000000000000000000000000000000000000000000)\E$/,         # require quiet [1]
    bf      => qr/(?i)nan(?-i).*\Q(0b1000000000000000000000000000000000000000000000000000)\E$/,
    xp      => qr/(?i)nan(?-i).*\Q(0x8000000000000)\E$/,                                                # require quiet [8]
    xf      => qr/(?i)nan(?-i).*\Q(0x8000000000000)\E$/,
    dp      => qr/(?i)nan(?-i).*\Q(0d2251799813685248)\E$/,                                             # ?: don't store () matches; require quiet only
    df      => qr/(?i)nan(?-i).*\Q(0d2251799813685248)\E$/,
};

# qw/7FF8000000000001 FFF8000000000001/;  qw/POS_QNAN___001 NEG_QNAN___001/;
push @tests, {
    text    => 'POS_QNAN_81',
    nibs    => '7FF8000000000001',
    bp      => qr/(?i)nan(?-i).*\Q(0b1000000000000000000000000000000000000000000000000001)\E$/,         # require quiet [1]
    bf      => qr/(?i)nan(?-i).*\Q(0b1000000000000000000000000000000000000000000000000001)\E$/,
    xp      => qr/(?i)nan(?-i).*\Q(0x8000000000001)\E$/,                                                # require quiet [8]
    xf      => qr/(?i)nan(?-i).*\Q(0x8000000000001)\E$/,
    dp      => qr/(?i)nan(?-i).*\Q(0d2251799813685249)\E$/,                                             # ?: don't store () matches; require quiet only
    df      => qr/(?i)nan(?-i).*\Q(0d2251799813685249)\E$/,
};
push @tests, {
    text    => 'NEG_QNAN_81',
    nibs    => 'FFF8000000000001',
    bp      => qr/(?i)nan(?-i).*\Q(0b1000000000000000000000000000000000000000000000000001)\E$/,         # require quiet [1]
    bf      => qr/(?i)nan(?-i).*\Q(0b1000000000000000000000000000000000000000000000000001)\E$/,
    xp      => qr/(?i)nan(?-i).*\Q(0x8000000000001)\E$/,                                                # require quiet [8]
    xf      => qr/(?i)nan(?-i).*\Q(0x8000000000001)\E$/,
    dp      => qr/(?i)nan(?-i).*\Q(0d2251799813685249)\E$/,                                             # ?: don't store () matches; require quiet only
    df      => qr/(?i)nan(?-i).*\Q(0d2251799813685249)\E$/,
};

# qw/7FFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF/;  qw/POS_QNAN___FFF NEG_QNAN___FFF/;
push @tests, {
    text    => 'POS_QNAN_FF',
    nibs    => '7FFFFFFFFFFFFFFF',
    bp      => qr/(?i)nan(?-i).*\Q(0b1111111111111111111111111111111111111111111111111111)\E$/,         # require quiet [1]
    bf      => qr/(?i)nan(?-i).*\Q(0b1111111111111111111111111111111111111111111111111111)\E$/,
    xp      => qr/(?i)nan(?-i).*\Q(0xFFFFFFFFFFFFF)\E$/,                                                # require quiet [8]
    xf      => qr/(?i)nan(?-i).*\Q(0xFFFFFFFFFFFFF)\E$/,
    dp      => qr/(?i)nan(?-i).*\Q(0d4503599627370495)\E$/,                                             # ?: don't store () matches; require quiet only
    df      => qr/(?i)nan(?-i).*\Q(0d4503599627370495)\E$/,
};
push @tests, {
    text    => 'NEG_QNAN_FF',
    nibs    => 'FFFFFFFFFFFFFFFF',
    bp      => qr/(?i)nan(?-i).*\Q(0b1111111111111111111111111111111111111111111111111111)\E$/,         # require quiet [1]
    bf      => qr/(?i)nan(?-i).*\Q(0b1111111111111111111111111111111111111111111111111111)\E$/,
    xp      => qr/(?i)nan(?-i).*\Q(0xFFFFFFFFFFFFF)\E$/,                                                # require quiet [8]
    xf      => qr/(?i)nan(?-i).*\Q(0xFFFFFFFFFFFFF)\E$/,
    dp      => qr/(?i)nan(?-i).*\Q(0d4503599627370495)\E$/,                                             # ?: don't store () matches; require quiet only
    df      => qr/(?i)nan(?-i).*\Q(0d4503599627370495)\E$/,
};

# qw/0010000000000000 8010000000000000/;  qw/POS_NORM_x1x0 NEG_NORM_x1x0/;
push @tests,  {
    text    => 'POS_NORM_x1x0',
    nibs    => '0010000000000000',
    bp      => "+0b1.0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000 * (2**-1022)",
    bf      => "  [     0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]\n+ [ 1 + -------------------------------------------------------------------- ] * (2**-1022) = 2.2250738585072e-308\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "+0x1.0000_0000_0000_0 * (2**-1022)",
    xf      => "  [     0x0000_0000_0000_00 ]\n+ [ 1 + ------------------- ] * (2**-1022) = 2.2250738585072e-308\n  [     0x1000_0000_0000_00 ]",
    dp      => "+1.000_000_000_000_000_0 * (2**-1022)",
    df      => "  [                         0 ]\n+ [ 1 + --------------------- ] * (2**-1022) = 2.2250738585072e-308\n  [     4,503,599,627,370,496 ]",
};
push @tests,  {
    text    => 'NEG_NORM_x1x0',
    nibs    => '8010000000000000',
    bp      => "-0b1.0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000 * (2**-1022)",
    bf      => "  [     0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]\n- [ 1 + -------------------------------------------------------------------- ] * (2**-1022) = -2.2250738585072e-308\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "-0x1.0000_0000_0000_0 * (2**-1022)",
    xf      => "  [     0x0000_0000_0000_00 ]\n- [ 1 + ------------------- ] * (2**-1022) = -2.2250738585072e-308\n  [     0x1000_0000_0000_00 ]",
    dp      => "-1.000_000_000_000_000_0 * (2**-1022)",
    df      => "  [                         0 ]\n- [ 1 + --------------------- ] * (2**-1022) = -2.2250738585072e-308\n  [     4,503,599,627,370,496 ]",
};

# qw/0010000000000001 8010000000000001/;  qw/POS_NORM_x1x1 NEG_NORM_x1x1/;
push @tests,  {
    text    => 'POS_NORM_x1x1',
    nibs    => '0010000000000001',
    bp      => "+0b1.0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0001 * (2**-1022)",
    bf      => "  [     0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_1 ]\n+ [ 1 + -------------------------------------------------------------------- ] * (2**-1022) = 2.2250738585072e-308\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "+0x1.0000_0000_0000_1 * (2**-1022)",
    xf      => "  [     0x0000_0000_0000_01 ]\n+ [ 1 + ------------------- ] * (2**-1022) = 2.2250738585072e-308\n  [     0x1000_0000_0000_00 ]",
    dp      => "+1.000_000_000_000_000_2 * (2**-1022)",
    df      => "  [                         1 ]\n+ [ 1 + --------------------- ] * (2**-1022) = 2.2250738585072e-308\n  [     4,503,599,627,370,496 ]",
};
push @tests,  {
    text    => 'NEG_NORM_x1x1',
    nibs    => '8010000000000001',
    bp      => "-0b1.0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0001 * (2**-1022)",
    bf      => "  [     0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_1 ]\n- [ 1 + -------------------------------------------------------------------- ] * (2**-1022) = -2.2250738585072e-308\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "-0x1.0000_0000_0000_1 * (2**-1022)",
    xf      => "  [     0x0000_0000_0000_01 ]\n- [ 1 + ------------------- ] * (2**-1022) = -2.2250738585072e-308\n  [     0x1000_0000_0000_00 ]",
    dp      => "-1.000_000_000_000_000_2 * (2**-1022)",
    df      => "  [                         1 ]\n- [ 1 + --------------------- ] * (2**-1022) = -2.2250738585072e-308\n  [     4,503,599,627,370,496 ]",
};

# qw/001FFFFFFFFFFFFF 801FFFFFFFFFFFFF/;  qw/POS_NORM_x1xF NEG_NORM_x1xF/;
push @tests,  {
    text    => 'POS_NORM_x1xF',
    nibs    => '001FFFFFFFFFFFFF',
    bp      => "+0b1.1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111 * (2**-1022)",
    bf      => "  [     0b0111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1 ]\n+ [ 1 + -------------------------------------------------------------------- ] * (2**-1022) = 4.4501477170144e-308\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "+0x1.FFFF_FFFF_FFFF_F * (2**-1022)",
    xf      => "  [     0x0FFF_FFFF_FFFF_FF ]\n+ [ 1 + ------------------- ] * (2**-1022) = 4.4501477170144e-308\n  [     0x1000_0000_0000_00 ]",
    dp      => "+1.999_999_999_999_999_8 * (2**-1022)",
    df      => "  [     4,503,599,627,370,495 ]\n+ [ 1 + --------------------- ] * (2**-1022) = 4.4501477170144e-308\n  [     4,503,599,627,370,496 ]",
};
push @tests,  {
    text    => 'NEG_NORM_x1xF',
    nibs    => '801FFFFFFFFFFFFF',
    bp      => "-0b1.1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111 * (2**-1022)",
    bf      => "  [     0b0111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1 ]\n- [ 1 + -------------------------------------------------------------------- ] * (2**-1022) = -4.4501477170144e-308\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "-0x1.FFFF_FFFF_FFFF_F * (2**-1022)",
    xf      => "  [     0x0FFF_FFFF_FFFF_FF ]\n- [ 1 + ------------------- ] * (2**-1022) = -4.4501477170144e-308\n  [     0x1000_0000_0000_00 ]",
    dp      => "-1.999_999_999_999_999_8 * (2**-1022)",
    df      => "  [     4,503,599,627,370,495 ]\n- [ 1 + --------------------- ] * (2**-1022) = -4.4501477170144e-308\n  [     4,503,599,627,370,496 ]",
};

# qw/3FF0000000000000 BFF0000000000000/;  qw/POS_NORM_x3x0 NEG_NORM_xBx0/;
push @tests,  {
    text    => 'POS_NORM_x3x0',
    nibs    => '3FF0000000000000',
    bp      => "+0b1.0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000 * (2**0)",
    bf      => "  [     0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]\n+ [ 1 + -------------------------------------------------------------------- ] * (2**0) = 1\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "+0x1.0000_0000_0000_0 * (2**0)",
    xf      => "  [     0x0000_0000_0000_00 ]\n+ [ 1 + ------------------- ] * (2**0) = 1\n  [     0x1000_0000_0000_00 ]",
    dp      => "+1.000_000_000_000_000_0 * (2**0)",
    df      => "  [                         0 ]\n+ [ 1 + --------------------- ] * (2**0) = 1\n  [     4,503,599,627,370,496 ]",
};
push @tests,  {
    text    => 'NEG_NORM_xBx0',
    nibs    => 'BFF0000000000000',
    bp      => "-0b1.0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000 * (2**0)",
    bf      => "  [     0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]\n- [ 1 + -------------------------------------------------------------------- ] * (2**0) = -1\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "-0x1.0000_0000_0000_0 * (2**0)",
    xf      => "  [     0x0000_0000_0000_00 ]\n- [ 1 + ------------------- ] * (2**0) = -1\n  [     0x1000_0000_0000_00 ]",
    dp      => "-1.000_000_000_000_000_0 * (2**0)",
    df      => "  [                         0 ]\n- [ 1 + --------------------- ] * (2**0) = -1\n  [     4,503,599,627,370,496 ]",
};

# qw/3FF0000000000001 BFF0000000000001/;  qw/POS_NORM_x3x1 NEG_NORM_xBx1/;
push @tests,  {
    text    => 'POS_NORM_x3x1',
    nibs    => '3FF0000000000001',
    bp      => "+0b1.0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0001 * (2**0)",
    bf      => "  [     0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_1 ]\n+ [ 1 + -------------------------------------------------------------------- ] * (2**0) = 1\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "+0x1.0000_0000_0000_1 * (2**0)",
    xf      => "  [     0x0000_0000_0000_01 ]\n+ [ 1 + ------------------- ] * (2**0) = 1\n  [     0x1000_0000_0000_00 ]",
    dp      => "+1.000_000_000_000_000_2 * (2**0)",
    df      => "  [                         1 ]\n+ [ 1 + --------------------- ] * (2**0) = 1\n  [     4,503,599,627,370,496 ]",
};
push @tests,  {
    text    => 'NEG_NORM_xBx1',
    nibs    => 'BFF0000000000001',
    bp      => "-0b1.0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0001 * (2**0)",
    bf      => "  [     0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_1 ]\n- [ 1 + -------------------------------------------------------------------- ] * (2**0) = -1\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "-0x1.0000_0000_0000_1 * (2**0)",
    xf      => "  [     0x0000_0000_0000_01 ]\n- [ 1 + ------------------- ] * (2**0) = -1\n  [     0x1000_0000_0000_00 ]",
    dp      => "-1.000_000_000_000_000_2 * (2**0)",
    df      => "  [                         1 ]\n- [ 1 + --------------------- ] * (2**0) = -1\n  [     4,503,599,627,370,496 ]",
};

# qw/3FFFFFFFFFFFFFFF BFFFFFFFFFFFFFFF/;  qw/POS_NORM_x3xF NEG_NORM_xBxF/;
push @tests,  {
    text    => 'POS_NORM_x3xF',
    nibs    => '3FFFFFFFFFFFFFFF',
    bp      => "+0b1.1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111 * (2**0)",
    bf      => "  [     0b0111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1 ]\n+ [ 1 + -------------------------------------------------------------------- ] * (2**0) = 2\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "+0x1.FFFF_FFFF_FFFF_F * (2**0)",
    xf      => "  [     0x0FFF_FFFF_FFFF_FF ]\n+ [ 1 + ------------------- ] * (2**0) = 2\n  [     0x1000_0000_0000_00 ]",
    dp      => "+1.999_999_999_999_999_8 * (2**0)",
    df      => "  [     4,503,599,627,370,495 ]\n+ [ 1 + --------------------- ] * (2**0) = 2\n  [     4,503,599,627,370,496 ]",
};
push @tests,  {
    text    => 'NEG_NORM_xBxF',
    nibs    => 'BFFFFFFFFFFFFFFF',
    bp      => "-0b1.1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111 * (2**0)",
    bf      => "  [     0b0111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1 ]\n- [ 1 + -------------------------------------------------------------------- ] * (2**0) = -2\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "-0x1.FFFF_FFFF_FFFF_F * (2**0)",
    xf      => "  [     0x0FFF_FFFF_FFFF_FF ]\n- [ 1 + ------------------- ] * (2**0) = -2\n  [     0x1000_0000_0000_00 ]",
    dp      => "-1.999_999_999_999_999_8 * (2**0)",
    df      => "  [     4,503,599,627,370,495 ]\n- [ 1 + --------------------- ] * (2**0) = -2\n  [     4,503,599,627,370,496 ]",
};

# qw/4000000000000000 C000000000000000/;  qw/POS_NORM_x4x0 NEG_NORM_xCx0/;
push @tests,  {
    text    => 'POS_NORM_x4x0',
    nibs    => '4000000000000000',
    bp      => "+0b1.0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000 * (2**1)",
    bf      => "  [     0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]\n+ [ 1 + -------------------------------------------------------------------- ] * (2**1) = 2\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "+0x1.0000_0000_0000_0 * (2**1)",
    xf      => "  [     0x0000_0000_0000_00 ]\n+ [ 1 + ------------------- ] * (2**1) = 2\n  [     0x1000_0000_0000_00 ]",
    dp      => "+1.000_000_000_000_000_0 * (2**1)",
    df      => "  [                         0 ]\n+ [ 1 + --------------------- ] * (2**1) = 2\n  [     4,503,599,627,370,496 ]",
};
push @tests,  {
    text    => 'NEG_NORM_xCx0',
    nibs    => 'C000000000000000',
    bp      => "-0b1.0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000 * (2**1)",
    bf      => "  [     0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]\n- [ 1 + -------------------------------------------------------------------- ] * (2**1) = -2\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "-0x1.0000_0000_0000_0 * (2**1)",
    xf      => "  [     0x0000_0000_0000_00 ]\n- [ 1 + ------------------- ] * (2**1) = -2\n  [     0x1000_0000_0000_00 ]",
    dp      => "-1.000_000_000_000_000_0 * (2**1)",
    df      => "  [                         0 ]\n- [ 1 + --------------------- ] * (2**1) = -2\n  [     4,503,599,627,370,496 ]",
};

# qw/4000000000000001 C000000000000001/;  qw/POS_NORM_x4x1 NEG_NORM_xCx1/;
push @tests,  {
    text    => 'POS_NORM_x4x1',
    nibs    => '4000000000000001',
    bp      => "+0b1.0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0001 * (2**1)",
    bf      => "  [     0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_1 ]\n+ [ 1 + -------------------------------------------------------------------- ] * (2**1) = 2\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "+0x1.0000_0000_0000_1 * (2**1)",
    xf      => "  [     0x0000_0000_0000_01 ]\n+ [ 1 + ------------------- ] * (2**1) = 2\n  [     0x1000_0000_0000_00 ]",
    dp      => "+1.000_000_000_000_000_2 * (2**1)",
    df      => "  [                         1 ]\n+ [ 1 + --------------------- ] * (2**1) = 2\n  [     4,503,599,627,370,496 ]",
};
push @tests,  {
    text    => 'NEG_NORM_xCx1',
    nibs    => 'C000000000000001',
    bp      => "-0b1.0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0001 * (2**1)",
    bf      => "  [     0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_1 ]\n- [ 1 + -------------------------------------------------------------------- ] * (2**1) = -2\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "-0x1.0000_0000_0000_1 * (2**1)",
    xf      => "  [     0x0000_0000_0000_01 ]\n- [ 1 + ------------------- ] * (2**1) = -2\n  [     0x1000_0000_0000_00 ]",
    dp      => "-1.000_000_000_000_000_2 * (2**1)",
    df      => "  [                         1 ]\n- [ 1 + --------------------- ] * (2**1) = -2\n  [     4,503,599,627,370,496 ]",
};

# qw/400FFFFFFFFFFFFF C00FFFFFFFFFFFFF/;  qw/POS_NORM_x4xF NEG_NORM_xCxF/;
push @tests,  {
    text    => 'POS_NORM_x4xF',
    nibs    => '400FFFFFFFFFFFFF',
    bp      => "+0b1.1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111 * (2**1)",
    bf      => "  [     0b0111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1 ]\n+ [ 1 + -------------------------------------------------------------------- ] * (2**1) = 4\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "+0x1.FFFF_FFFF_FFFF_F * (2**1)",
    xf      => "  [     0x0FFF_FFFF_FFFF_FF ]\n+ [ 1 + ------------------- ] * (2**1) = 4\n  [     0x1000_0000_0000_00 ]",
    dp      => "+1.999_999_999_999_999_8 * (2**1)",
    df      => "  [     4,503,599,627,370,495 ]\n+ [ 1 + --------------------- ] * (2**1) = 4\n  [     4,503,599,627,370,496 ]",
};
push @tests,  {
    text    => 'NEG_NORM_xCxF',
    nibs    => 'C00FFFFFFFFFFFFF',
    bp      => "-0b1.1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111 * (2**1)",
    bf      => "  [     0b0111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1 ]\n- [ 1 + -------------------------------------------------------------------- ] * (2**1) = -4\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "-0x1.FFFF_FFFF_FFFF_F * (2**1)",
    xf      => "  [     0x0FFF_FFFF_FFFF_FF ]\n- [ 1 + ------------------- ] * (2**1) = -4\n  [     0x1000_0000_0000_00 ]",
    dp      => "-1.999_999_999_999_999_8 * (2**1)",
    df      => "  [     4,503,599,627,370,495 ]\n- [ 1 + --------------------- ] * (2**1) = -4\n  [     4,503,599,627,370,496 ]",
};

# qw/7FE0000000000000 FFE0000000000000/;  qw/POS_NORM_xFx0 NEG_NORM_xFx0/;
push @tests,  {
    text    => 'POS_NORM_xFx0',
    nibs    => '7FE0000000000000',
    bp      => "+0b1.0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000 * (2**1023)",
    bf      => "  [     0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]\n+ [ 1 + -------------------------------------------------------------------- ] * (2**1023) = 8.98846567431158e+307\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "+0x1.0000_0000_0000_0 * (2**1023)",
    xf      => "  [     0x0000_0000_0000_00 ]\n+ [ 1 + ------------------- ] * (2**1023) = 8.98846567431158e+307\n  [     0x1000_0000_0000_00 ]",
    dp      => "+1.000_000_000_000_000_0 * (2**1023)",
    df      => "  [                         0 ]\n+ [ 1 + --------------------- ] * (2**1023) = 8.98846567431158e+307\n  [     4,503,599,627,370,496 ]",
};
push @tests,  {
    text    => 'NEG_NORM_xFx0',
    nibs    => 'FFE0000000000000',
    bp      => "-0b1.0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000 * (2**1023)",
    bf      => "  [     0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]\n- [ 1 + -------------------------------------------------------------------- ] * (2**1023) = -8.98846567431158e+307\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "-0x1.0000_0000_0000_0 * (2**1023)",
    xf      => "  [     0x0000_0000_0000_00 ]\n- [ 1 + ------------------- ] * (2**1023) = -8.98846567431158e+307\n  [     0x1000_0000_0000_00 ]",
    dp      => "-1.000_000_000_000_000_0 * (2**1023)",
    df      => "  [                         0 ]\n- [ 1 + --------------------- ] * (2**1023) = -8.98846567431158e+307\n  [     4,503,599,627,370,496 ]",
};

# qw/7FE0000000000001 FFE0000000000001/;  qw/POS_NORM_xFx1 NEG_NORM_xFx1/;
push @tests,  {
    text    => 'POS_NORM_xFx1',
    nibs    => '7FE0000000000001',
    bp      => "+0b1.0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0001 * (2**1023)",
    bf      => "  [     0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_1 ]\n+ [ 1 + -------------------------------------------------------------------- ] * (2**1023) = 8.98846567431158e+307\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "+0x1.0000_0000_0000_1 * (2**1023)",
    xf      => "  [     0x0000_0000_0000_01 ]\n+ [ 1 + ------------------- ] * (2**1023) = 8.98846567431158e+307\n  [     0x1000_0000_0000_00 ]",
    dp      => "+1.000_000_000_000_000_2 * (2**1023)",
    df      => "  [                         1 ]\n+ [ 1 + --------------------- ] * (2**1023) = 8.98846567431158e+307\n  [     4,503,599,627,370,496 ]",
};
push @tests,  {
    text    => 'NEG_NORM_xFx1',
    nibs    => 'FFE0000000000001',
    bp      => "-0b1.0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0001 * (2**1023)",
    bf      => "  [     0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_1 ]\n- [ 1 + -------------------------------------------------------------------- ] * (2**1023) = -8.98846567431158e+307\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "-0x1.0000_0000_0000_1 * (2**1023)",
    xf      => "  [     0x0000_0000_0000_01 ]\n- [ 1 + ------------------- ] * (2**1023) = -8.98846567431158e+307\n  [     0x1000_0000_0000_00 ]",
    dp      => "-1.000_000_000_000_000_2 * (2**1023)",
    df      => "  [                         1 ]\n- [ 1 + --------------------- ] * (2**1023) = -8.98846567431158e+307\n  [     4,503,599,627,370,496 ]",
};

# qw/7FEFFFFFFFFFFFFF FFEFFFFFFFFFFFFF/;  qw/POS_NORM_xFxF NEG_NORM_xFxF/;
push @tests,  {
    text    => 'POS_NORM_xFxF',
    nibs    => '7FEFFFFFFFFFFFFF',
    bp      => "+0b1.1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111 * (2**1023)",
    bf      => "  [     0b0111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1 ]\n+ [ 1 + -------------------------------------------------------------------- ] * (2**1023) = 1.79769313486232e+308\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "+0x1.FFFF_FFFF_FFFF_F * (2**1023)",
    xf      => "  [     0x0FFF_FFFF_FFFF_FF ]\n+ [ 1 + ------------------- ] * (2**1023) = 1.79769313486232e+308\n  [     0x1000_0000_0000_00 ]",
    dp      => "+1.999_999_999_999_999_8 * (2**1023)",
    df      => "  [     4,503,599,627,370,495 ]\n+ [ 1 + --------------------- ] * (2**1023) = 1.79769313486232e+308\n  [     4,503,599,627,370,496 ]",
};
push @tests,  {
    text    => 'NEG_NORM_xFxF',
    nibs    => 'FFEFFFFFFFFFFFFF',
    bp      => "-0b1.1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111 * (2**1023)",
    bf      => "  [     0b0111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1 ]\n- [ 1 + -------------------------------------------------------------------- ] * (2**1023) = -1.79769313486232e+308\n  [     0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0 ]",
    xp      => "-0x1.FFFF_FFFF_FFFF_F * (2**1023)",
    xf      => "  [     0x0FFF_FFFF_FFFF_FF ]\n- [ 1 + ------------------- ] * (2**1023) = -1.79769313486232e+308\n  [     0x1000_0000_0000_00 ]",
    dp      => "-1.999_999_999_999_999_8 * (2**1023)",
    df      => "  [     4,503,599,627,370,495 ]\n- [ 1 + --------------------- ] * (2**1023) = -1.79769313486232e+308\n  [     4,503,599,627,370,496 ]",
};

plan tests => 6*scalar(@tests);

foreach my $row ( @tests ) {
    my $n = $row->{text};
    my $v = Data::IEEE754::Tools::hexstr754_to_double( $row->{nibs} );
    my ($bp, $bf, $xp, $xf, $dp, $df) = @$row{qw/bp bf xp xf dp df/};
    foreach ($bp, $bf, $xp, $xf, $dp, $df) { $_ = 'DoesNotExist' unless defined $_; }
    my $re;
    #diag sprintf "\n%s(%+.16e)", $n, $v;
    # if it's already a qr// Regexp, use it as-is; otherwise, convert it to a quoted regexp matching from beginning to end
    $re = (ref($bp) eq 'Regexp') ? $bp : qr/^\Q$bp\E$/; like( expand_ieee754($v, base => 'bin', reduce => 0, drawFraction => 0), $re, sprintf("%-20s %3s %5s", $n, 'bin', '') );
    $re = (ref($bf) eq 'Regexp') ? $bf : qr/^\Q$bf\E$/; like( expand_ieee754($v, base => 'bin', reduce => 0, drawFraction => 1), $re, sprintf("%-20s %3s %5s", $n, 'bin', 'fract') );
    $re = (ref($xp) eq 'Regexp') ? $xp : qr/^\Q$xp\E$/; like( expand_ieee754($v, base => 'hex', reduce => 0, drawFraction => 0), $re, sprintf("%-20s %3s %5s", $n, 'hex', '') );
    $re = (ref($xf) eq 'Regexp') ? $xf : qr/^\Q$xf\E$/; like( expand_ieee754($v, base => 'hex', reduce => 0, drawFraction => 1), $re, sprintf("%-20s %3s %5s", $n, 'hex', 'fract') );
    $re = (ref($dp) eq 'Regexp') ? $dp : qr/^\Q$dp\E$/; like( expand_ieee754($v, base => 'dec', reduce => 0, drawFraction => 0), $re, sprintf("%-20s %3s %5s", $n, 'dec', '') );
    $re = (ref($df) eq 'Regexp') ? $df : qr/^\Q$df\E$/; like( expand_ieee754($v, base => 'dec', reduce => 0, drawFraction => 1), $re, sprintf("%-20s %3s %5s", $n, 'dec', 'fract') );
    #diag '';
    #diag '-'x80;
}

exit;

